name: Build and publish python package

on:
  workflow_call:

permissions:
  contents: read
  id-token: write
  attestations: write

jobs:
  publish-to-pypi:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      # use fetch --all for setuptools_scm to work
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: python -m pip install --upgrade pip twine

    - name: Build wheel
      run: python -m pip wheel -w dist --no-deps .

    - name: Check distribution
      run: twine check dist/*

    - name: Create attestations
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
      with:
        subject-path: 'dist/*'

    - name: Publish package (to TestPyPI)
      if: startsWith(github.repository, 'cpp-linter') && !startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      run: twine upload --repository testpypi dist/*

    - name: Publish package (to PyPI)
      if: startsWith(github.repository, 'cpp-linter') && startsWith(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
